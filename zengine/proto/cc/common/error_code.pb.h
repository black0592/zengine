// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: error_code.proto

#ifndef PROTOBUF_error_5fcode_2eproto__INCLUDED
#define PROTOBUF_error_5fcode_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace hammer {
namespace common {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_error_5fcode_2eproto();
void protobuf_AssignDesc_error_5fcode_2eproto();
void protobuf_ShutdownFile_error_5fcode_2eproto();


enum ErrorCode {
  kErrorCode_Ok = 0,
  kErrorCode_ParseMessageError = 1,
  kErrorCode_InvalidError = 2,
  kErrorCode_AuthOk = 10,
  kErrorCode_NotPermission = 11,
  kErrorCode_BeenBanned = 12,
  kErrorCode_PasswordError = 13,
  kErrorCode_HasLogin = 14,
  kErrorCode_NonExistent = 15,
  kErrorCode_Existed = 16,
  kErrorCode_Timeout = 17
};
bool ErrorCode_IsValid(int value);
const ErrorCode ErrorCode_MIN = kErrorCode_Ok;
const ErrorCode ErrorCode_MAX = kErrorCode_Timeout;
const int ErrorCode_ARRAYSIZE = ErrorCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor();
inline const ::std::string& ErrorCode_Name(ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ErrorCode_descriptor(), value);
}
inline bool ErrorCode_Parse(
    const ::std::string& name, ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ErrorCode>(
    ErrorCode_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace common
}  // namespace hammer

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< hammer::common::ErrorCode>() {
  return hammer::common::ErrorCode_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_error_5fcode_2eproto__INCLUDED
